# -*- coding: utf-8 -*-
"""week2_numpy_exercise.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16XlskwbGF_uvT1pOPaC6RJ_F4uYjcS6A
"""

import numpy as np

"""1. You have a 2D array A with shape (3, 3). Slice this array to get all columns except the last one, but reverse the order of the rows."""

A = np.random.randint(1,10,size=(3,3))
print(A)
print('\n')
B = A[::-1,:-1]
print(B)

"""2. You have a 1D array A. Extract the elements that are multiples of 3 and also less than 7."""

C = np.random.randint(1,10,size=(10,))
print(C)
print('\n')
indicate = np.where((C%3==0)&(C<=7))
print(indicate)

"""3. You have a 3D array A with shape (4, 3, 2). Swap the first and third axes and then reshape it into a 2D array."""

ML = np.random.randint(1,26,size=(4,3,2))
print(ML)
print('\n')

ML = ML.swapaxes(0,2)
print(ML)
print('\n')

ML = ML.reshape(6,4)
print(ML)

"""4. You have a 1D array A. Count the number of positive and negative elements in it."""

world = np.random.randint(-10,10,size=(20,))
print(world)
print('\n')

plus_world = np.where(world>0,1,0)
print(sum(plus_world))
print('\n')

minus_world = np.where(world<0,1,0)
print(sum(minus_world))

"""5. You have a 3D array A with shape (5, 4, 7). Your task is to extract a **3D** slice from this array that includes:

* All elements from the last 2 planes in the third dimension,
* Elements from alternating indices along the first dimension.
* Elements from alternating indices along the second dimension, starting with the first element.
"""

five = np.random.randint(1,141,size=(5,4,7))
print(five)
print('\n')
maroon = five[::2,::2,-2:]
print(maroon)
